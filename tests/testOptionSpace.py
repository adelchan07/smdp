"""
Created on Mon Aug 17 13:54:03 2020
@author: adelphachan
testOptionSpace.py

optionSpace = dictionary in the format {(state): [list of names of options valid at this state]}
"""

import sys
sys.path.append('../executive/')

import numpy as np
import unittest
from ddt import ddt, data, unpack
import optionSpaceFunction as targetCode 

@ddt
class TestOptionSpaceFunction(unittest.TestCase):
	def setUp(self):

		#testing on 13x9 grid used in landmark option set up
		optionPolicies = {'up': {(1, 1): (0, 1), (1, 2): (0, 1), (1, 4): (0, 1), (1, 5): (0, 1), (1, 6): (0, 1), (1, 7): (0, 1), (2, 1): (0, 1), (2, 2): (0, 1), (2, 4): (0, 1), (2, 5): (0, 1), (2, 6): (0, 1), (2, 7): (0, 1), (3, 1): (0, 1), (3, 2): (0, 1), (3, 3): (0, 1), (3, 4): (0, 1), (3, 5): (0, 1), (3, 6): (0, 1), (3, 7): (0, 1), (4, 1): (0, 1), (4, 2): (0, 1), (4, 4): (0, 1), (4, 5): (0, 1), (4, 6): (0, 1), (4, 7): (0, 1), (5, 2): (0, 1), (5, 6): (0, 1), (6, 1): (0, 1), (6, 2): (0, 1), (6, 3): (0, 1), (6, 5): (0, 1), (6, 6): (0, 1), (6, 7): (0, 1), (7, 1): (0, 1), (7, 2): (0, 1), (7, 3): (0, 1), (7, 5): (0, 1), (7, 6): (0, 1), (7, 7): (0, 1), (8, 1): (0, 1), (8, 2): (0, 1), (8, 3): (0, 1), (8, 5): (0, 1), (8, 6): (0, 1), (8, 7): (0, 1), (9, 1): (0, 1), (9, 2): (0, 1), (9, 3): (0, 1), (9, 4): (0, 1), (9, 5): (0, 1), (9, 6): (0, 1), (9, 7): (0, 1), (10, 1): (0, 1), (10, 2): (0, 1), (10, 3): (0, 1), (10, 5): (0, 1), (10, 6): (0, 1), (10, 7): (0, 1), (11, 1): (0, 1), (11, 2): (0, 1), (11, 3): (0, 1), (11, 5): (0, 1), (11, 6): (0, 1), (11, 7): (0, 1)}, 'down': {(1, 1): (0, -1), (1, 2): (0, -1), (1, 4): (0, -1), (1, 5): (0, -1), (1, 6): (0, -1), (1, 7): (0, -1), (2, 1): (0, -1), (2, 2): (0, -1), (2, 4): (0, -1), (2, 5): (0, -1), (2, 6): (0, -1), (2, 7): (0, -1), (3, 1): (0, -1), (3, 2): (0, -1), (3, 3): (0, -1), (3, 4): (0, -1), (3, 5): (0, -1), (3, 6): (0, -1), (3, 7): (0, -1), (4, 1): (0, -1), (4, 2): (0, -1), (4, 4): (0, -1), (4, 5): (0, -1), (4, 6): (0, -1), (4, 7): (0, -1), (5, 2): (0, -1), (5, 6): (0, -1), (6, 1): (0, -1), (6, 2): (0, -1), (6, 3): (0, -1), (6, 5): (0, -1), (6, 6): (0, -1), (6, 7): (0, -1), (7, 1): (0, -1), (7, 2): (0, -1), (7, 3): (0, -1), (7, 5): (0, -1), (7, 6): (0, -1), (7, 7): (0, -1), (8, 1): (0, -1), (8, 2): (0, -1), (8, 3): (0, -1), (8, 5): (0, -1), (8, 6): (0, -1), (8, 7): (0, -1), (9, 1): (0, -1), (9, 2): (0, -1), (9, 3): (0, -1), (9, 4): (0, -1), (9, 5): (0, -1), (9, 6): (0, -1), (9, 7): (0, -1), (10, 1): (0, -1), (10, 2): (0, -1), (10, 3): (0, -1), (10, 5): (0, -1), (10, 6): (0, -1), (10, 7): (0, -1), (11, 1): (0, -1), (11, 2): (0, -1), (11, 3): (0, -1), (11, 5): (0, -1), (11, 6): (0, -1), (11, 7): (0, -1)}, 'left': {(1, 1): (-1, 0), (1, 2): (-1, 0), (1, 4): (-1, 0), (1, 5): (-1, 0), (1, 6): (-1, 0), (1, 7): (-1, 0), (2, 1): (-1, 0), (2, 2): (-1, 0), (2, 4): (-1, 0), (2, 5): (-1, 0), (2, 6): (-1, 0), (2, 7): (-1, 0), (3, 1): (-1, 0), (3, 2): (-1, 0), (3, 3): (-1, 0), (3, 4): (-1, 0), (3, 5): (-1, 0), (3, 6): (-1, 0), (3, 7): (-1, 0), (4, 1): (-1, 0), (4, 2): (-1, 0), (4, 4): (-1, 0), (4, 5): (-1, 0), (4, 6): (-1, 0), (4, 7): (-1, 0), (5, 2): (-1, 0), (5, 6): (-1, 0), (6, 1): (-1, 0), (6, 2): (-1, 0), (6, 3): (-1, 0), (6, 5): (-1, 0), (6, 6): (-1, 0), (6, 7): (-1, 0), (7, 1): (-1, 0), (7, 2): (-1, 0), (7, 3): (-1, 0), (7, 5): (-1, 0), (7, 6): (-1, 0), (7, 7): (-1, 0), (8, 1): (-1, 0), (8, 2): (-1, 0), (8, 3): (-1, 0), (8, 5): (-1, 0), (8, 6): (-1, 0), (8, 7): (-1, 0), (9, 1): (-1, 0), (9, 2): (-1, 0), (9, 3): (-1, 0), (9, 4): (-1, 0), (9, 5): (-1, 0), (9, 6): (-1, 0), (9, 7): (-1, 0), (10, 1): (-1, 0), (10, 2): (-1, 0), (10, 3): (-1, 0), (10, 5): (-1, 0), (10, 6): (-1, 0), (10, 7): (-1, 0), (11, 1): (-1, 0), (11, 2): (-1, 0), (11, 3): (-1, 0), (11, 5): (-1, 0), (11, 6): (-1, 0), (11, 7): (-1, 0)}, 'right': {(1, 1): (1, 0), (1, 2): (1, 0), (1, 4): (1, 0), (1, 5): (1, 0), (1, 6): (1, 0), (1, 7): (1, 0), (2, 1): (1, 0), (2, 2): (1, 0), (2, 4): (1, 0), (2, 5): (1, 0), (2, 6): (1, 0), (2, 7): (1, 0), (3, 1): (1, 0), (3, 2): (1, 0), (3, 3): (1, 0), (3, 4): (1, 0), (3, 5): (1, 0), (3, 6): (1, 0), (3, 7): (1, 0), (4, 1): (1, 0), (4, 2): (1, 0), (4, 4): (1, 0), (4, 5): (1, 0), (4, 6): (1, 0), (4, 7): (1, 0), (5, 2): (1, 0), (5, 6): (1, 0), (6, 1): (1, 0), (6, 2): (1, 0), (6, 3): (1, 0), (6, 5): (1, 0), (6, 6): (1, 0), (6, 7): (1, 0), (7, 1): (1, 0), (7, 2): (1, 0), (7, 3): (1, 0), (7, 5): (1, 0), (7, 6): (1, 0), (7, 7): (1, 0), (8, 1): (1, 0), (8, 2): (1, 0), (8, 3): (1, 0), (8, 5): (1, 0), (8, 6): (1, 0), (8, 7): (1, 0), (9, 1): (1, 0), (9, 2): (1, 0), (9, 3): (1, 0), (9, 4): (1, 0), (9, 5): (1, 0), (9, 6): (1, 0), (9, 7): (1, 0), (10, 1): (1, 0), (10, 2): (1, 0), (10, 3): (1, 0), (10, 5): (1, 0), (10, 6): (1, 0), (10, 7): (1, 0), (11, 1): (1, 0), (11, 2): (1, 0), (11, 3): (1, 0), (11, 5): (1, 0), (11, 6): (1, 0), (11, 7): (1, 0)}, 'h1': {(1, 1): (0, 1), (1, 2): (1, 0), (2, 1): (0, 1), (2, 2): (1, 0), (3, 1): (0, 1), (3, 2): (0, 1), (4, 1): (0, 1), (4, 2): (-1, 0), (1, 4): (1, 0), (1, 5): (1, 0), (1, 6): (1, 0), (1, 7): (1, 0), (2, 4): (1, 0), (2, 5): (1, 0), (2, 6): (1, 0), (2, 7): (1, 0), (3, 4): (0, -1), (3, 5): (0, -1), (3, 6): (0, -1), (3, 7): (0, -1), (4, 4): (-1, 0), (4, 5): (0, -1), (4, 6): (0, -1), (4, 7): (0, -1), (3, 3): (1, 0)}, 'h2': {(1, 1): (0, 1), (1, 2): (1, 0), (2, 1): (0, 1), (2, 2): (1, 0), (3, 1): (0, 1), (3, 2): (1, 0), (4, 1): (0, 1), (4, 2): (1, 0), (6, 1): (0, 1), (6, 2): (-1, 0), (6, 3): (0, -1), (7, 1): (0, 1), (7, 2): (-1, 0), (7, 3): (0, -1), (8, 1): (0, 1), (8, 2): (-1, 0), (8, 3): (0, -1), (9, 1): (0, 1), (9, 2): (-1, 0), (9, 3): (0, -1), (10, 1): (0, 1), (10, 2): (-1, 0), (10, 3): (0, -1), (11, 1): (0, 1), (11, 2): (-1, 0), (11, 3): (0, -1), (5, 2): (0, 1)}, 'h3': {(1, 4): (0, 1), (1, 5): (0, 1), (1, 6): (1, 0), (1, 7): (1, 0), (2, 4): (0, 1), (2, 5): (0, 1), (2, 6): (1, 0), (2, 7): (1, 0), (3, 4): (0, 1), (3, 5): (0, 1), (3, 6): (1, 0), (3, 7): (1, 0), (4, 4): (0, 1), (4, 5): (0, 1), (4, 6): (1, 0), (4, 7): (0, -1), (6, 5): (0, 1), (6, 6): (-1, 0), (6, 7): (0, -1), (7, 5): (0, 1), (7, 6): (-1, 0), (7, 7): (0, -1), (8, 5): (0, 1), (8, 6): (-1, 0), (8, 7): (0, -1), (9, 5): (0, 1), (9, 6): (-1, 0), (9, 7): (0, -1), (10, 5): (0, 1), (10, 6): (-1, 0), (10, 7): (0, -1), (11, 5): (0, 1), (11, 6): (-1, 0), (11, 7): (0, -1), (5, 6): (0, 1)}, 'h4': {(6, 5): (1, 0), (6, 6): (1, 0), (6, 7): (1, 0), (7, 5): (1, 0), (7, 6): (1, 0), (7, 7): (1, 0), (8, 5): (1, 0), (8, 6): (1, 0), (8, 7): (1, 0), (9, 5): (0, -1), (9, 6): (0, -1), (9, 7): (0, -1), (10, 5): (-1, 0), (10, 6): (0, -1), (10, 7): (0, -1), (11, 5): (-1, 0), (11, 6): (0, -1), (11, 7): (0, -1), (6, 1): (0, 1), (6, 2): (0, 1), (6, 3): (1, 0), (7, 1): (0, 1), (7, 2): (0, 1), (7, 3): (1, 0), (8, 1): (0, 1), (8, 2): (0, 1), (8, 3): (1, 0), (9, 1): (0, 1), (9, 2): (0, 1), (9, 3): (0, 1), (10, 1): (0, 1), (10, 2): (0, 1), (10, 3): (-1, 0), (11, 1): (0, 1), (11, 2): (0, 1), (11, 3): (-1, 0), (9, 4): (1, 0)}}
		optionSpace = {(1, 1): ['up', 'down', 'left', 'right', 'h1', 'h2'], (1, 2): ['up', 'down', 'left', 'right', 'h1', 'h2'], (1, 4): ['up', 'down', 'left', 'right', 'h1', 'h3'], (1, 5): ['up', 'down', 'left', 'right', 'h1', 'h3'], (1, 6): ['up', 'down', 'left', 'right', 'h1', 'h3'], (1, 7): ['up', 'down', 'left', 'right', 'h1', 'h3'], (2, 1): ['up', 'down', 'left', 'right', 'h1', 'h2'], (2, 2): ['up', 'down', 'left', 'right', 'h1', 'h2'], (2, 4): ['up', 'down', 'left', 'right', 'h1', 'h3'], (2, 5): ['up', 'down', 'left', 'right', 'h1', 'h3'], (2, 6): ['up', 'down', 'left', 'right', 'h1', 'h3'], (2, 7): ['up', 'down', 'left', 'right', 'h1', 'h3'], (3, 1): ['up', 'down', 'left', 'right', 'h1', 'h2'], (3, 2): ['up', 'down', 'left', 'right', 'h1', 'h2'], (3, 3): ['up', 'down', 'left', 'right', 'h1'], (3, 4): ['up', 'down', 'left', 'right', 'h1', 'h3'], (3, 5): ['up', 'down', 'left', 'right', 'h1', 'h3'], (3, 6): ['up', 'down', 'left', 'right', 'h1', 'h3'], (3, 7): ['up', 'down', 'left', 'right', 'h1', 'h3'], (4, 1): ['up', 'down', 'left', 'right', 'h1', 'h2'], (4, 2): ['up', 'down', 'left', 'right', 'h1', 'h2'], (4, 4): ['up', 'down', 'left', 'right', 'h1', 'h3'], (4, 5): ['up', 'down', 'left', 'right', 'h1', 'h3'], (4, 6): ['up', 'down', 'left', 'right', 'h1', 'h3'], (4, 7): ['up', 'down', 'left', 'right', 'h1', 'h3'], (5, 2): ['up', 'down', 'left', 'right', 'h2'], (5, 6): ['up', 'down', 'left', 'right', 'h3'], (6, 1): ['up', 'down', 'left', 'right', 'h2', 'h4'], (6, 2): ['up', 'down', 'left', 'right', 'h2', 'h4'], (6, 3): ['up', 'down', 'left', 'right', 'h2', 'h4'], (6, 5): ['up', 'down', 'left', 'right', 'h3', 'h4'], (6, 6): ['up', 'down', 'left', 'right', 'h3', 'h4'], (6, 7): ['up', 'down', 'left', 'right', 'h3', 'h4'], (7, 1): ['up', 'down', 'left', 'right', 'h2', 'h4'], (7, 2): ['up', 'down', 'left', 'right', 'h2', 'h4'], (7, 3): ['up', 'down', 'left', 'right', 'h2', 'h4'], (7, 5): ['up', 'down', 'left', 'right', 'h3', 'h4'], (7, 6): ['up', 'down', 'left', 'right', 'h3', 'h4'], (7, 7): ['up', 'down', 'left', 'right', 'h3', 'h4'], (8, 1): ['up', 'down', 'left', 'right', 'h2', 'h4'], (8, 2): ['up', 'down', 'left', 'right', 'h2', 'h4'], (8, 3): ['up', 'down', 'left', 'right', 'h2', 'h4'], (8, 5): ['up', 'down', 'left', 'right', 'h3', 'h4'], (8, 6): ['up', 'down', 'left', 'right', 'h3', 'h4'], (8, 7): ['up', 'down', 'left', 'right', 'h3', 'h4'], (9, 1): ['up', 'down', 'left', 'right', 'h2', 'h4'], (9, 2): ['up', 'down', 'left', 'right', 'h2', 'h4'], (9, 3): ['up', 'down', 'left', 'right', 'h2', 'h4'], (9, 4): ['up', 'down', 'left', 'right', 'h4'], (9, 5): ['up', 'down', 'left', 'right', 'h3', 'h4'], (9, 6): ['up', 'down', 'left', 'right', 'h3', 'h4'], (9, 7): ['up', 'down', 'left', 'right', 'h3', 'h4'], (10, 1): ['up', 'down', 'left', 'right', 'h2', 'h4'], (10, 2): ['up', 'down', 'left', 'right', 'h2', 'h4'], (10, 3): ['up', 'down', 'left', 'right', 'h2', 'h4'], (10, 5): ['up', 'down', 'left', 'right', 'h3', 'h4'], (10, 6): ['up', 'down', 'left', 'right', 'h3', 'h4'], (10, 7): ['up', 'down', 'left', 'right', 'h3', 'h4'], (11, 1): ['up', 'down', 'left', 'right', 'h2', 'h4'], (11, 2): ['up', 'down', 'left', 'right', 'h2', 'h4'], (11, 3): ['up', 'down', 'left', 'right', 'h2', 'h4'], (11, 5): ['up', 'down', 'left', 'right', 'h3', 'h4'], (11, 6): ['up', 'down', 'left', 'right', 'h3', 'h4'], (11, 7): ['up', 'down', 'left', 'right', 'h3', 'h4']}
		self.function = targetCode.OptionSpaceFunction(optionSpace)

	@data(((2,1), 'down'), ((5,6), 'left'), ((9,3), 'right'), ((10,7), 'up'))
	@unpack
	def test_Primitive(self, state, expectedOption):
		available = self.function(state)
		self.assertEqual(expectedOption in available, True)

	@data(((2,1), 'h1'), ((5,6), 'h3'), ((9,3), 'h2'), ((10,7), 'h4'))
	@unpack
	def test_Landmark(self, state, expectedOption):
		available = self.function(state)
		self.assertEqual(expectedOption in available, True)

if __name__ == '__main__':
	unittest.main(verbosity=2)
